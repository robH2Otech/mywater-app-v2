
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions for security
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function getUserRole() {
      return request.auth != null && 'role' in request.auth.token ? request.auth.token.role : '';
    }
    
    function getUserCompany() {
      return request.auth != null && 'company' in request.auth.token ? request.auth.token.company : '';
    }
    
    function isSuperAdmin() {
      return isAuthenticated() && getUserRole() == 'superadmin';
    }
    
    function isAdmin() {
      return isAuthenticated() && (getUserRole() == 'admin' || getUserRole() == 'superadmin');
    }
    
    function isTechnician() {
      return isAuthenticated() && (getUserRole() == 'technician' || isAdmin());
    }
    
    function canAccessCompany(companyId) {
      return isSuperAdmin() || getUserCompany() == companyId;
    }
    
    function isValidRole(role) {
      return role in ['superadmin', 'admin', 'technician', 'user'];
    }
    
    function isValidEmail(email) {
      return email.matches('.*@.*\\..*');
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Business users collection - more permissive for development
    match /app_users_business/{userId} {
      // Allow authenticated users to read all business users for now
      allow read: if isAuthenticated();
      
      // Allow creation and updates for authenticated users
      allow create: if isAuthenticated() && (
        (request.auth.uid == userId && isValidEmail(request.resource.data.email)) ||
        isAdmin()
      );
      
      allow update: if isAuthenticated() && (
        request.auth.uid == userId ||
        isAdmin()
      );
      
      // Only admins can delete users
      allow delete: if isAdmin();
    }
    
    // Private users collection - users can only access their own data
    match /app_users_privat/{userId} {
      allow read, write: if isAuthenticated() && request.auth.uid == userId;
    }
    
    // Company-based data access for other collections - more permissive
    match /units/{unitId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated();
      allow create: if isAuthenticated();
      allow delete: if isAdmin();
    }
    
    match /measurements/{measurementId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated();
      allow create: if isAuthenticated();
    }
    
    match /alerts/{alertId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated();
      allow create: if isAuthenticated();
      allow delete: if isAdmin();
    }
    
    match /client_requests/{requestId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated();
      allow create: if isAuthenticated();
    }
    
    match /locations/{locationId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated();
      allow create: if isAuthenticated();
    }
    
    match /filters/{filterId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated();
      allow create: if isAuthenticated();
      allow delete: if isAdmin();
    }
    
    match /reports/{reportId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update, delete: if isAdmin();
    }
    
    // Orders - private users can see their own orders
    match /orders/{orderId} {
      allow read: if isAuthenticated() && (
        isOwner(resource.data.user_id) || 
        isSuperAdmin()
      );
      allow write: if false; // Only functions can write orders
    }
    
    // Referral system
    match /referral_codes/{codeId} {
      allow read: if isAuthenticated() && (
        isOwner(resource.data.user_id) || 
        isSuperAdmin()
      );
      allow create: if isAuthenticated() && isOwner(request.resource.data.user_id);
      allow update: if isAuthenticated() && isOwner(resource.data.user_id);
      allow delete: if isAuthenticated() && isOwner(resource.data.user_id);
    }
    
    match /referrals/{referralId} {
      allow read: if isAuthenticated() && (
        isOwner(resource.data.referrer_id) || 
        isSuperAdmin()
      );
      allow write: if false; // Only functions can write referrals
    }
    
    // Audit logs - only superadmins can read, all authenticated users can create
    match /audit_logs/{logId} {
      allow read: if isSuperAdmin();
      allow create: if isAuthenticated();
      allow update, delete: if false;
    }
    
    // System notifications
    match /notifications/{notificationId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && isOwner(resource.data.user_id);
      allow delete: if isAuthenticated() && isOwner(resource.data.user_id);
    }
    
    // Deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
